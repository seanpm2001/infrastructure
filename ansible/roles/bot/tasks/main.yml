- name: assert vars are set
  assert:
    that:
      - "{{ bot_numbers | length }}  > 0"
      - bot_location_city_name != ""

- name: create service user to run the app
  become: true
  user:
    name: "{{ bot_user }}"
    create_home: no
    system: yes

- name: deploy scripts
  become: true
  template:
    src: "{{ item }}.j2"
    dest: "/opt/"
    owner: "{{ bot_user }}"
    group: "{{ admin_group }}"
    mode: "0755"
  with_items:
#    - start-all
#    - stop-all
    - download-all-maps

- name: create folders
  become: true
  file:
    state: directory
    path: "{{ item }}"
    mode: "0755"
    owner: "{{ bot_user }}"
    group: "{{ admin_group }}"
  with_items:
    - "{{ bot_folder }}"
    - "{{ bot_install_home }}"
    - "{{ bot_maps_folder }}"

- name: Download Bot Zip File
  become: true
  register: bot_zip_file_download
  get_url:
    url: "{{ bot_zip_file_url }}"
    dest: "{{ bot_install_home }}"
    mode: "0644"
    checksum: "md5:d5f6a5828f28db8f5e61945327e8d8c0"
    owner: "{{ bot_user }}"
    group: "{{ bot_user }}"

- name: extract zip file
  become: true
  when: bot_zip_file_download.changed
  unarchive:
    remote_src: yes
    src: "{{ bot_install_home }}/triplea-game-headless.zip"
    dest: "{{ bot_install_home }}/"
    owner: "{{ bot_user }}"
    group: "{{ admin_group }}"

- name: create triplea-root touch file
  become: true
  file:
    state: touch
    path: "{{ bot_install_home }}/.triplea-root"
    mode: "0644"
    owner: "{{ bot_user }}"
    group: "{{ admin_group }}"

- name: ensure logging folder /var/log/triplea exists
  become: true
  file:
    path: /var/log/triplea
    state: directory
    mode: "0755"
    owner: "{{ bot_user }}"
    group:  "{{ admin_group }}"

#- name: deploy rsyslog config files to send log output from syslog to files
#  become: true
#  register: bot_rsyslog_conf
#  template:
#    src: bot-rsyslog.conf
#    dest: /etc/rsyslog.d/bot{{ item }}.conf
#    mode: "0644"
#    owner: root
#    group: root
#  with_items: "{{ bot_numbers }}"

#- name: restart rsyslog to pick up any config changes
#  become: true
#  when: bot_rsyslog_conf.changed
#  service:
#    name: rsyslog
#    state: restarted

- name: install systemd service script
  become: true
  template:
    src: bot.service.j2
    dest: /lib/systemd/system/bot@.service
    mode: "644"
    owner: root
    group: "{{ admin_group }}"

- name: allow ports
  become: true
  ufw:
    rule: allow
    port: "{{ item.port }}"
    proto: tcp
  with_items: "{{ bot_instances }}"

- name: enable and ensure bots are started
  become: true
  service:
    name: "bot@{{ item.number }}"
    state: started
    enabled: yes
    daemon_reload: yes
  with_items: "{{ bot_instances }}"
